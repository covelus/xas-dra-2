/* soapLDAP_USCOREServiceBindingProxy.h
   Generated by gSOAP 2.7.9k from ldapws.h
   Copyright(C) 2000-2007, Robert van Engelen, Genivia Inc. All Rights Reserved.
   This part of the software is released under one of the following licenses:
   GPL, the gSOAP public license, or Genivia's license for commercial use.
*/

#ifndef soapLDAP_USCOREServiceBindingProxy_H
#define soapLDAP_USCOREServiceBindingProxy_H
#include "soapH.h"

class SOAP_CMAC LDAP_USCOREServiceBindingProxy : public soap
{ public:
	/// Endpoint URL of service 'LDAP_USCOREServiceBindingProxy' (change as needed)
	const char *soap_endpoint;
	/// Constructor
	LDAP_USCOREServiceBindingProxy();
	/// Constructor with engine input+output mode control
	LDAP_USCOREServiceBindingProxy(soap_mode iomode);
	/// Constructor with engine input and output mode control
	LDAP_USCOREServiceBindingProxy(soap_mode imode, soap_mode omode);
	/// Destructor frees deserialized data
	virtual	~LDAP_USCOREServiceBindingProxy();
	/// Initializer used by constructor
	virtual	void LDAP_USCOREServiceBindingProxy_init(soap_mode imode, soap_mode omode);
	/// Disables and removes SOAP Header from message
	virtual	void soap_noheader();
	/// Get SOAP Fault structure (NULL when absent)
	virtual	const SOAP_ENV__Fault *soap_fault();
	/// Get SOAP Fault string (NULL when absent)
	virtual	const char *soap_fault_string();
	/// Get SOAP Fault detail as string (NULL when absent)
	virtual	const char *soap_fault_detail();
	/// Web service operation 'autentificar' (return error code or SOAP_OK)
	virtual	int autentificar(std::string login, std::string password, std::string usuario, std::string &success);
};
#endif
