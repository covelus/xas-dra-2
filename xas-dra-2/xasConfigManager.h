/************************************************************************                        xasConfigManager.h - Copyright breo**************************************************************************/#ifndef XASCONFIGMANAGER_H#define XASCONFIGMANAGER_H#include <string>#include "xasConfigStore.h"#include "xasLanguage.h"#include "external_libs/tinyxml/tinyxml.h"#include <vector>#include "xasUserInterface.h"using namespace std; /**  * class xasConfigManager  * Auxiliary class for use when we read each XML item  */class XMLItem {	public:		std::string data;	//! Main data, the purpose of the file		std::string id;	//!item identifier		std::string descr;	//!item description		XMLItem() : id(""), data(""), descr("") 		{		}	 	string getData(void) 	 	{               return data;        }        	 	string getID(void) 	 	{               return id;        }};/**  * class xasConfigManager  */class xasConfigManager{public:  // Constructors/Destructors  //    /**   * Empty Constructor   */  xasConfigManager ( );  /**   * Empty Destructor   */  virtual ~xasConfigManager ( );  // Static public attributes  //    // public attributes  //    // public attribute accessor methods  //    int loadFromXmlFile(string filena, xasConfigStoreReg &reg);//  template <class T > int xasConfigManager::loadConfigStoreFromXmlFile(string filena, T &reg);    int loadFromXmlFile(string filena, xasLangReg &reg);  //  bool updateConfigStore();    int loadFromFile(string filena, xasLangReg &reg);/*  void loadFromFile(/* lang /);  */};  // Other methods//  #endif // XASCONFIGMANAGER_H
